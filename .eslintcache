[{"C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\index.js":"1","C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\reportWebVitals.js":"2","C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\components\\App\\App.js":"3","C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\components\\Result\\Result.js":"4","C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\components\\Keypad\\Keypad.js":"5","C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\components\\Button\\Button.js":"6"},{"size":525,"mtime":1618358787997,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1625,"mtime":1618358060754,"results":"10","hashOfConfig":"8"},{"size":279,"mtime":1614383181792,"results":"11","hashOfConfig":"8"},{"size":1899,"mtime":1618358295069,"results":"12","hashOfConfig":"8"},{"size":398,"mtime":1618358554836,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cnkgkg",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\index.js",[],"C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\reportWebVitals.js",[],["28","29"],"C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\components\\App\\App.js",["30"],"import React from 'react';\nimport { Result } from '../Result/Result';\nimport { Keypad } from '../Keypad/Keypad';\nimport './App.css';\n\nclass App extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {result: ''};\n      this.handleClick = this.handleClick.bind(this);\n      this.calculate = this.calculate.bind(this);\n      this.backspace = this.backspace.bind(this);\n      this.clear = this.clear.bind(this);\n    }\n\n    calculate(){\n      try {\n        // eval is safe in this context because user input is constrained to numbers and expressions.\n        const ans = String(eval(this.state.result))\n        this.setState({result: ans})\n      } catch (e) {\n        if (e instanceof SyntaxError) {\n            alert(e.message);\n        }\n      }\n    }\n\n    backspace(){\n      const newResult = this.state.result.slice(0, -1);\n      this.setState({result: newResult});\n    }\n\n    clear(){\n      this.setState({result: ''})\n    }\n\n    handleClick(val){\n      if(val === '='){\n        this.calculate();\n      }\n      else if(val === 'CE'){\n        this.clear();\n      }\n      else if(val === 'C'){\n        this.backspace();\n      }\n      else{\n        let oldResult = this.state.result;\n        const newResult = oldResult += val;\n        this.setState({result: newResult})\n      }\n    }\n\n    render() {\n      return (\n        <div className=\"body\">\n          <h1>Simple Calculator</h1>\n          <div className=\"calculator-body\">\n            <Result result={this.state.result}/>\n            <Keypad onClick={this.handleClick} />\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default App;","C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\components\\Result\\Result.js",[],"C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\components\\Keypad\\Keypad.js",[],"C:\\Users\\emman\\OneDrive\\Documents\\GitHub\\calculator-app\\src\\components\\Button\\Button.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":19,"column":28,"nodeType":"37","messageId":"38","endLine":19,"endColumn":32},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]